name: checkVulnerabilityPackage

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths: ['**package-lock.json']

jobs:
  prepare-checking:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      pkg-matrix: ${{ steps.read-json.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read vulnerability list from JSON
        id: read-json
        # read Json as package checking list which includes package name and version.
        run:  |
          pkg_list=$(cat "./.github/workflows/vulnerabilityPackage.json" | jq -c)
          echo $pkg_list
          echo "::set-output name=value::$( echo $pkg_list )"

  execute:
    needs: prepare-checking
    runs-on: ubuntu-latest
    timeout-minutes: 5
    # the Json read by previous job is changed to checking jobs. each job has same steps.
    strategy:
      matrix:
        entries: ${{fromJson(needs.prepare-checking.outputs.pkg-matrix)}}

    name: Checking ${{ matrix.entries.pkgnm }} ${{ matrix.entries.pkgver }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Search and judge version of the package
        id: search-judge
        # search 'packages' and `dependencies` section for a version of vulnerability package.
        run:  |
          flist=$(find ./ -mindepth 1 -name "package-lock.json" | jq -R -s -c 'split("\n")[:-1]')
          errmsg=""
          for fl in $(echo $flist | jq -r '.[]'); do
            fit_pkg=$(cat $fl | jq -r '.packages."node_modules/${{ matrix.entries.pkgnm }}".version')
            fit_dep=$(cat $fl | jq -r '.dependencies."${{ matrix.entries.pkgnm }}".version')
            if echo $fit_pkg == ${{ matrix.entries.pkgver }} || echo $fit_dep == ${{ matrix.entries.pkgver}} >/dev/null 2>&1; then
              errmsg=${errmsg}"-[${{ matrix.entries.pkgnm }} ${{ matrix.entries.pkgver }}] was found in '$fl'.\n"
            fi
          done
          if echo $errmsg != "" >/dev/null 2>&1; then
            errmsg="Vulnerability package has included in your repository.\n"$errmsg
            echo $errmsg
            echo "::set-output name=err_msg::$( echo $errmsg )"
            exit 1
          fi  

#      - name: Judge version of the package
#        id: judge-version
#        # check if the version searched by previous step is vulnerability version.
#        if: ${{ steps.search-pkg.outputs.version_pkg == matrix.entries.pkgver || steps.search-pkg.outputs.version_dep == matrix.entries.pkgver }}
#        run: |
#          echo "Vulnerability package [${{ matrix.entries.pkgnm }} ${{ matrix.entries.pkgver }}] has included in your repository."
#          exit 1

      - name: Write fail comment to pull request
        id: write-fail-comment
        # write comment to pull request if previous step failed.
        if: failure()
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: ":x: ${{ steps.search-judge.outputs.err_msg }}"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}




