name: checkVulnerabilityPackage

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  prepare-checking:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    outputs:
      pkg-matrix: ${{ steps.read-json.outputs.value }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read vulnerability list from JSON
        id: read-json
        run:  |
          pkg_list=$(cat "./.github/workflows/vulnerabilityPackage.json" | jq -c)
          echo $pkg_list
          echo "::set-output name=value::$( echo $pkg_list )"

  execute:
    needs: prepare-checking
    runs-on: ubuntu-latest
    timeout-minutes: 1
    strategy:
#      fail-fast: false
      matrix:
        entries: ${{fromJson(needs.prepare-checking.outputs.pkg-matrix)}}

    name: Checking ${{ matrix.entries.pkgnm }} ${{ matrix.entries.pkgver }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Search package
        id: search-pkg
        # search 'packages' and `dependencies` section for a version of vulnerability package.
        run:  |
          fit_pkg=$(cat package-lock.json | jq -r '.packages.${{ matrix.entries.pkgnm }}.version')
          echo "[${{ matrix.entries.pkgnm }} ${{ matrix.entries.pkgver }}] fit from packages:" $fit_pkg
          echo "::set-output name=version_pkg::$( echo $fit_pkg )"
          fit_dep=$(cat package-lock.json | jq -r '.dependencies.${{ matrix.entries.pkgnm }}.version')
          echo "[${{ matrix.entries.pkgnm }} ${{ matrix.entries.pkgver }}] fit from dependencies:" $fit_dep
          echo "::set-output name=version_dep::$( echo $fit_dep )"

      - name: Judge version of the package
        id: judge-version
        # check if the version searched by previous step is vulnerability version.
        if: ${{ steps.search-pkg.outputs.version_pkg == matrix.entries.pkgver || steps.search-pkg.outputs.version_dep == matrix.entries.pkgver }}
        run: |
          echo "Vulnerability package [${{ matrix.entries.pkgnm }} ${{ matrix.entries.pkgver }}] has included in your repository."
          exit 1

      - name: Write fail comment to pull request
        id: write-fail-comment
        if: failure()
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: ":x: Vulnerability package [${{ matrix.entries.pkgnm }} ${{ matrix.entries.pkgver }}] has included in your repository."
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}




